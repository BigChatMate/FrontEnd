"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _logger = _interopRequireDefault(require("../logger"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumBaseDriver = require("appium-base-driver");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

function toBool(s) {
  return _lodash.default.isString(s) ? s.toLowerCase() === 'true' : !!s;
}

commands.getAttribute = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (attribute, elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/attribute/${attribute}`, 'GET', {});
  });

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

commands.elementDisplayed = function () {
  var _ref2 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return toBool((yield this.getAttribute("displayed", elementId)));
  });

  return function (_x3) {
    return _ref2.apply(this, arguments);
  };
}();

commands.elementEnabled = function () {
  var _ref3 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return toBool((yield this.getAttribute("enabled", elementId)));
  });

  return function (_x4) {
    return _ref3.apply(this, arguments);
  };
}();

commands.elementSelected = function () {
  var _ref4 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return toBool((yield this.getAttribute("selected", elementId)));
  });

  return function (_x5) {
    return _ref4.apply(this, arguments);
  };
}();

commands.getName = function () {
  var _ref5 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/name`, 'GET', {});
  });

  return function (_x6) {
    return _ref5.apply(this, arguments);
  };
}();

commands.getLocation = function () {
  var _ref6 = (0, _asyncToGenerator2.default)(function* (elementId) {
    _logger.default.info(`calling get location: ${elementId}`);

    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/location`, 'GET', {});
  });

  return function (_x7) {
    return _ref6.apply(this, arguments);
  };
}();

commands.getSize = function () {
  var _ref7 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/size`, 'GET', {});
  });

  return function (_x8) {
    return _ref7.apply(this, arguments);
  };
}();

commands.touchLongClick = function () {
  var _ref8 = (0, _asyncToGenerator2.default)(function* (element, x, y, duration) {
    let params = {
      element,
      x,
      y,
      duration
    };
    return yield this.uiautomator2.jwproxy.command(`/touch/longclick`, 'POST', {
      params
    });
  });

  return function (_x9, _x10, _x11, _x12) {
    return _ref8.apply(this, arguments);
  };
}();

commands.touchDown = function () {
  var _ref9 = (0, _asyncToGenerator2.default)(function* (element, x, y) {
    let params = {
      element,
      x,
      y
    };
    return yield this.uiautomator2.jwproxy.command(`/touch/down`, 'POST', {
      params
    });
  });

  return function (_x13, _x14, _x15) {
    return _ref9.apply(this, arguments);
  };
}();

commands.touchUp = function () {
  var _ref10 = (0, _asyncToGenerator2.default)(function* (element, x, y) {
    let params = {
      element,
      x,
      y
    };
    return yield this.uiautomator2.jwproxy.command(`/touch/up`, 'POST', {
      params
    });
  });

  return function (_x16, _x17, _x18) {
    return _ref10.apply(this, arguments);
  };
}();

commands.touchMove = function () {
  var _ref11 = (0, _asyncToGenerator2.default)(function* (element, x, y) {
    let params = {
      element,
      x,
      y
    };
    return yield this.uiautomator2.jwproxy.command(`/touch/move`, 'POST', {
      params
    });
  });

  return function (_x19, _x20, _x21) {
    return _ref11.apply(this, arguments);
  };
}();

helpers.doSetElementValue = function () {
  var _ref12 = (0, _asyncToGenerator2.default)(function* (params) {
    return yield this.uiautomator2.jwproxy.command(`/element/${params.elementId}/value`, 'POST', params);
  });

  return function (_x22) {
    return _ref12.apply(this, arguments);
  };
}();

commands.setValueImmediate = function () {
  var _ref13 = (0, _asyncToGenerator2.default)(function* (keys, elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/value`, 'POST', {
      elementId,
      text: _lodash.default.isArray(keys) ? keys.join('') : keys,
      replace: false,
      unicodeKeyboard: this.opts.unicodeKeyboard
    });
  });

  return function (_x23, _x24) {
    return _ref13.apply(this, arguments);
  };
}();

commands.getText = function () {
  var _ref14 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/text`, 'GET', {});
  });

  return function (_x25) {
    return _ref14.apply(this, arguments);
  };
}();

commands.click = function () {
  var _ref15 = (0, _asyncToGenerator2.default)(function* (element) {
    return yield this.uiautomator2.jwproxy.command(`/element/${element}/click`, 'POST', {
      element
    });
  });

  return function (_x26) {
    return _ref15.apply(this, arguments);
  };
}();

commands.getElementScreenshot = function () {
  var _ref16 = (0, _asyncToGenerator2.default)(function* (element) {
    return yield this.uiautomator2.jwproxy.command(`/element/${element}/screenshot`, 'GET', {});
  });

  return function (_x27) {
    return _ref16.apply(this, arguments);
  };
}();

commands.tap = function () {
  var _ref17 = (0, _asyncToGenerator2.default)(function* (element, x = 0, y = 0, count = 1) {
    for (let i = 0; i < count; i++) {
      if (element) {
        let params = {
          element
        };

        if (x !== 0 || y !== 0) {
          params.x = x;
          params.y = y;
        }

        yield this.uiautomator2.jwproxy.command(`/element/${element}/click`, 'POST', params);
      } else {
        yield this.uiautomator2.jwproxy.command(`/appium/tap`, 'POST', {
          x,
          y
        });
      }
    }
  });

  return function (_x28) {
    return _ref17.apply(this, arguments);
  };
}();

commands.clear = function () {
  var _ref18 = (0, _asyncToGenerator2.default)(function* (elementId) {
    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/clear`, 'POST', {
      elementId
    });
  });

  return function (_x29) {
    return _ref18.apply(this, arguments);
  };
}();

commands.getElementRect = function () {
  var _ref19 = (0, _asyncToGenerator2.default)(function* (elementId) {
    if (this.isWebContext()) {
      _logger.default.debug(`Detected downstream chromedriver protocol: ${this.chromedriver.jwproxy.downstreamProtocol}`);

      if (this.chromedriver.jwproxy.downstreamProtocol === _appiumBaseDriver.BaseDriver.DRIVER_PROTOCOL.MJSONWP) {
        const _ref20 = yield this.chromedriver.jwproxy.command(`/element/${elementId}/location`, 'GET'),
              x = _ref20.x,
              y = _ref20.y;

        const _ref21 = yield this.chromedriver.jwproxy.command(`/element/${elementId}/size`, 'GET'),
              width = _ref21.width,
              height = _ref21.height;

        return {
          x,
          y,
          width,
          height
        };
      }

      return yield this.chromedriver.jwproxy.command(`/element/${elementId}/rect`, 'GET');
    }

    return yield this.uiautomator2.jwproxy.command(`/element/${elementId}/rect`, 'GET');
  });

  return function (_x30) {
    return _ref19.apply(this, arguments);
  };
}();

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,
