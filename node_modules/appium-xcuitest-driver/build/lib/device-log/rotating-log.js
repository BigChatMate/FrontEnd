"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MAX_LOG_ENTRIES_COUNT = exports.RotatingLog = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

const MAX_LOG_ENTRIES_COUNT = 10000;
exports.MAX_LOG_ENTRIES_COUNT = MAX_LOG_ENTRIES_COUNT;

class RotatingLog {
  constructor(showLogs = false, label = 'Log Label') {
    this.log = _appiumSupport.logger.getLogger(label);
    this.showLogs = showLogs;
    this.logs = [];
    this.logIdxSinceLastRequest = 0;
    this.isCapturing = false;
  }

  startCapture() {
    var _this = this;

    return (0, _asyncToGenerator2.default)(function* () {
      _this.isCapturing = true;
    })();
  }

  stopCapture() {
    var _this2 = this;

    return (0, _asyncToGenerator2.default)(function* () {
      _this2.isCapturing = false;
    })();
  }

  addLogLine() {}

  getLogs() {
    var _this3 = this;

    return (0, _asyncToGenerator2.default)(function* () {
      if (_this3.logs.length && _this3.logIdxSinceLastRequest < _this3.logs.length) {
        let result = _this3.logs;

        if (_this3.logIdxSinceLastRequest > 0) {
          result = result.slice(_this3.logIdxSinceLastRequest);
        }

        _this3.logIdxSinceLastRequest = _this3.logs.length;
        return result;
      }

      return [];
    })();
  }

  getAllLogs() {
    var _this4 = this;

    return (0, _asyncToGenerator2.default)(function* () {
      return _lodash.default.clone(_this4.logs);
    })();
  }

  get logs() {
    if (!this._logs) {
      this.logs = [];
    }

    return this._logs;
  }

  set logs(logs) {
    this._logs = logs;
  }

}

exports.RotatingLog = RotatingLog;
var _default = RotatingLog;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kZXZpY2UtbG9nL3JvdGF0aW5nLWxvZy5qcyJdLCJuYW1lcyI6WyJNQVhfTE9HX0VOVFJJRVNfQ09VTlQiLCJSb3RhdGluZ0xvZyIsImNvbnN0cnVjdG9yIiwic2hvd0xvZ3MiLCJsYWJlbCIsImxvZyIsImxvZ2dlciIsImdldExvZ2dlciIsImxvZ3MiLCJsb2dJZHhTaW5jZUxhc3RSZXF1ZXN0IiwiaXNDYXB0dXJpbmciLCJzdGFydENhcHR1cmUiLCJzdG9wQ2FwdHVyZSIsImFkZExvZ0xpbmUiLCJnZXRMb2dzIiwibGVuZ3RoIiwicmVzdWx0Iiwic2xpY2UiLCJnZXRBbGxMb2dzIiwiXyIsImNsb25lIiwiX2xvZ3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsTUFBTUEscUJBQXFCLEdBQUcsS0FBOUI7OztBQUVBLE1BQU1DLFdBQU4sQ0FBa0I7QUFDaEJDLEVBQUFBLFdBQVcsQ0FBRUMsUUFBUSxHQUFHLEtBQWIsRUFBb0JDLEtBQUssR0FBRyxXQUE1QixFQUF5QztBQUNsRCxTQUFLQyxHQUFMLEdBQVdDLHNCQUFPQyxTQUFQLENBQWlCSCxLQUFqQixDQUFYO0FBRUEsU0FBS0QsUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxTQUFLSyxJQUFMLEdBQVksRUFBWjtBQUNBLFNBQUtDLHNCQUFMLEdBQThCLENBQTlCO0FBRUEsU0FBS0MsV0FBTCxHQUFtQixLQUFuQjtBQUNEOztBQUVLQyxFQUFBQSxZQUFOLEdBQXNCO0FBQUE7O0FBQUE7QUFDcEIsTUFBQSxLQUFJLENBQUNELFdBQUwsR0FBbUIsSUFBbkI7QUFEb0I7QUFFckI7O0FBRUtFLEVBQUFBLFdBQU4sR0FBcUI7QUFBQTs7QUFBQTtBQUNuQixNQUFBLE1BQUksQ0FBQ0YsV0FBTCxHQUFtQixLQUFuQjtBQURtQjtBQUVwQjs7QUFLREcsRUFBQUEsVUFBVSxHQUFJLENBQ2I7O0FBRUtDLEVBQUFBLE9BQU4sR0FBaUI7QUFBQTs7QUFBQTtBQUNmLFVBQUksTUFBSSxDQUFDTixJQUFMLENBQVVPLE1BQVYsSUFBb0IsTUFBSSxDQUFDTixzQkFBTCxHQUE4QixNQUFJLENBQUNELElBQUwsQ0FBVU8sTUFBaEUsRUFBd0U7QUFDdEUsWUFBSUMsTUFBTSxHQUFHLE1BQUksQ0FBQ1IsSUFBbEI7O0FBQ0EsWUFBSSxNQUFJLENBQUNDLHNCQUFMLEdBQThCLENBQWxDLEVBQXFDO0FBQ25DTyxVQUFBQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLE1BQUksQ0FBQ1Isc0JBQWxCLENBQVQ7QUFDRDs7QUFDRCxRQUFBLE1BQUksQ0FBQ0Esc0JBQUwsR0FBOEIsTUFBSSxDQUFDRCxJQUFMLENBQVVPLE1BQXhDO0FBQ0EsZUFBT0MsTUFBUDtBQUNEOztBQUNELGFBQU8sRUFBUDtBQVRlO0FBVWhCOztBQUVLRSxFQUFBQSxVQUFOLEdBQW9CO0FBQUE7O0FBQUE7QUFDbEIsYUFBT0MsZ0JBQUVDLEtBQUYsQ0FBUSxNQUFJLENBQUNaLElBQWIsQ0FBUDtBQURrQjtBQUVuQjs7QUFFRCxNQUFJQSxJQUFKLEdBQVk7QUFDVixRQUFJLENBQUMsS0FBS2EsS0FBVixFQUFpQjtBQUNmLFdBQUtiLElBQUwsR0FBWSxFQUFaO0FBQ0Q7O0FBQ0QsV0FBTyxLQUFLYSxLQUFaO0FBQ0Q7O0FBRUQsTUFBSWIsSUFBSixDQUFVQSxJQUFWLEVBQWdCO0FBQ2QsU0FBS2EsS0FBTCxHQUFhYixJQUFiO0FBQ0Q7O0FBbERlOzs7ZUFzREhQLFciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xuXG5cbmNvbnN0IE1BWF9MT0dfRU5UUklFU19DT1VOVCA9IDEwMDAwO1xuXG5jbGFzcyBSb3RhdGluZ0xvZyB7XG4gIGNvbnN0cnVjdG9yIChzaG93TG9ncyA9IGZhbHNlLCBsYWJlbCA9ICdMb2cgTGFiZWwnKSB7XG4gICAgdGhpcy5sb2cgPSBsb2dnZXIuZ2V0TG9nZ2VyKGxhYmVsKTtcblxuICAgIHRoaXMuc2hvd0xvZ3MgPSBzaG93TG9ncztcbiAgICB0aGlzLmxvZ3MgPSBbXTtcbiAgICB0aGlzLmxvZ0lkeFNpbmNlTGFzdFJlcXVlc3QgPSAwO1xuXG4gICAgdGhpcy5pc0NhcHR1cmluZyA9IGZhbHNlO1xuICB9XG5cbiAgYXN5bmMgc3RhcnRDYXB0dXJlICgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZXF1aXJlLWF3YWl0XG4gICAgdGhpcy5pc0NhcHR1cmluZyA9IHRydWU7XG4gIH1cblxuICBhc3luYyBzdG9wQ2FwdHVyZSAoKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICAgIHRoaXMuaXNDYXB0dXJpbmcgPSBmYWxzZTtcbiAgfVxuXG4gIC8qXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgYWRkTG9nTGluZSAoKSB7XG4gIH1cblxuICBhc3luYyBnZXRMb2dzICgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZXF1aXJlLWF3YWl0XG4gICAgaWYgKHRoaXMubG9ncy5sZW5ndGggJiYgdGhpcy5sb2dJZHhTaW5jZUxhc3RSZXF1ZXN0IDwgdGhpcy5sb2dzLmxlbmd0aCkge1xuICAgICAgbGV0IHJlc3VsdCA9IHRoaXMubG9ncztcbiAgICAgIGlmICh0aGlzLmxvZ0lkeFNpbmNlTGFzdFJlcXVlc3QgPiAwKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zbGljZSh0aGlzLmxvZ0lkeFNpbmNlTGFzdFJlcXVlc3QpO1xuICAgICAgfVxuICAgICAgdGhpcy5sb2dJZHhTaW5jZUxhc3RSZXF1ZXN0ID0gdGhpcy5sb2dzLmxlbmd0aDtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGFzeW5jIGdldEFsbExvZ3MgKCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlcXVpcmUtYXdhaXRcbiAgICByZXR1cm4gXy5jbG9uZSh0aGlzLmxvZ3MpO1xuICB9XG5cbiAgZ2V0IGxvZ3MgKCkge1xuICAgIGlmICghdGhpcy5fbG9ncykge1xuICAgICAgdGhpcy5sb2dzID0gW107XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9sb2dzO1xuICB9XG5cbiAgc2V0IGxvZ3MgKGxvZ3MpIHtcbiAgICB0aGlzLl9sb2dzID0gbG9ncztcbiAgfVxufVxuXG5leHBvcnQgeyBSb3RhdGluZ0xvZywgTUFYX0xPR19FTlRSSUVTX0NPVU5UIH07XG5leHBvcnQgZGVmYXVsdCBSb3RhdGluZ0xvZztcbiJdLCJmaWxlIjoibGliL2RldmljZS1sb2cvcm90YXRpbmctbG9nLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
