"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _logger = _interopRequireDefault(require("../logger"));

var _appiumBaseDriver = require("appium-base-driver");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

commands.getCookies = function () {
  var _getCookies = (0, _asyncToGenerator2.default)(function* () {
    if (!this.isWebContext()) {
      throw new _appiumBaseDriver.errors.NotImplementedError();
    }

    const cookies = (yield this.remote.getCookies()) || {
      cookies: []
    };
    return cookies.cookies.map(function (cookie) {
      return Object.assign({}, cookie, {
        value: decodeURI(cookie.value)
      });
    });
  });

  return function getCookies() {
    return _getCookies.apply(this, arguments);
  };
}();

commands.deleteCookie = function () {
  var _deleteCookie2 = (0, _asyncToGenerator2.default)(function* (cookieName) {
    if (!this.isWebContext()) {
      throw new _appiumBaseDriver.errors.NotImplementedError();
    }

    const cookies = yield this.getCookies();
    const cookie = cookies.find(cookie => cookie.name === cookieName);

    if (!cookie) {
      _logger.default.debug(`Cookie '${cookieName}' not found. Ignoring.`);

      return true;
    }

    yield this._deleteCookie(cookie);
    return true;
  });

  return function deleteCookie(_x) {
    return _deleteCookie2.apply(this, arguments);
  };
}();

commands.deleteCookies = function () {
  var _deleteCookies = (0, _asyncToGenerator2.default)(function* () {
    if (!this.isWebContext()) {
      throw new _appiumBaseDriver.errors.NotImplementedError();
    }

    const cookies = yield this.getCookies();
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = cookies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        const cookie = _step.value;
        yield this._deleteCookie(cookie);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return true;
  });

  return function deleteCookies() {
    return _deleteCookies.apply(this, arguments);
  };
}();

helpers._deleteCookie = function () {
  var _deleteCookie3 = (0, _asyncToGenerator2.default)(function* (cookie) {
    const url = `http${cookie.secure ? 's' : ''}://${cookie.domain}${cookie.path}`;
    return yield this.remote.deleteCookie(cookie.name, url);
  });

  return function _deleteCookie(_x2) {
    return _deleteCookie3.apply(this, arguments);
  };
}();

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9jb29raWVzLmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwiaGVscGVycyIsImV4dGVuc2lvbnMiLCJnZXRDb29raWVzIiwiaXNXZWJDb250ZXh0IiwiZXJyb3JzIiwiTm90SW1wbGVtZW50ZWRFcnJvciIsImNvb2tpZXMiLCJyZW1vdGUiLCJtYXAiLCJjb29raWUiLCJPYmplY3QiLCJhc3NpZ24iLCJ2YWx1ZSIsImRlY29kZVVSSSIsImRlbGV0ZUNvb2tpZSIsImNvb2tpZU5hbWUiLCJmaW5kIiwibmFtZSIsImxvZyIsImRlYnVnIiwiX2RlbGV0ZUNvb2tpZSIsImRlbGV0ZUNvb2tpZXMiLCJ1cmwiLCJzZWN1cmUiLCJkb21haW4iLCJwYXRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUdBLElBQUlBLFFBQVEsR0FBRyxFQUFmO0FBQUEsSUFBbUJDLE9BQU8sR0FBRyxFQUE3QjtBQUFBLElBQWlDQyxVQUFVLEdBQUcsRUFBOUM7Ozs7QUFFQUYsUUFBUSxDQUFDRyxVQUFUO0FBQUEsb0RBQXNCLGFBQTZCO0FBQ2pELFFBQUksQ0FBQyxLQUFLQyxZQUFMLEVBQUwsRUFBMEI7QUFDeEIsWUFBTSxJQUFJQyx5QkFBT0MsbUJBQVgsRUFBTjtBQUNEOztBQUdELFVBQU1DLE9BQU8sR0FBRyxPQUFNLEtBQUtDLE1BQUwsQ0FBWUwsVUFBWixFQUFOLEtBQWtDO0FBQUNJLE1BQUFBLE9BQU8sRUFBRTtBQUFWLEtBQWxEO0FBR0EsV0FBT0EsT0FBTyxDQUFDQSxPQUFSLENBQWdCRSxHQUFoQixDQUFvQixVQUFVQyxNQUFWLEVBQWtCO0FBQzNDLGFBQU9DLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JGLE1BQWxCLEVBQTBCO0FBQy9CRyxRQUFBQSxLQUFLLEVBQUVDLFNBQVMsQ0FBQ0osTUFBTSxDQUFDRyxLQUFSO0FBRGUsT0FBMUIsQ0FBUDtBQUdELEtBSk0sQ0FBUDtBQUtELEdBZEQ7O0FBQUEsa0JBQXFDVixVQUFyQztBQUFBO0FBQUE7QUFBQTs7QUFnQkFILFFBQVEsQ0FBQ2UsWUFBVDtBQUFBLHVEQUF3QixXQUE2QkMsVUFBN0IsRUFBeUM7QUFDL0QsUUFBSSxDQUFDLEtBQUtaLFlBQUwsRUFBTCxFQUEwQjtBQUN4QixZQUFNLElBQUlDLHlCQUFPQyxtQkFBWCxFQUFOO0FBQ0Q7O0FBRUQsVUFBTUMsT0FBTyxTQUFTLEtBQUtKLFVBQUwsRUFBdEI7QUFDQSxVQUFNTyxNQUFNLEdBQUdILE9BQU8sQ0FBQ1UsSUFBUixDQUFjUCxNQUFELElBQVlBLE1BQU0sQ0FBQ1EsSUFBUCxLQUFnQkYsVUFBekMsQ0FBZjs7QUFDQSxRQUFJLENBQUNOLE1BQUwsRUFBYTtBQUNYUyxzQkFBSUMsS0FBSixDQUFXLFdBQVVKLFVBQVcsd0JBQWhDOztBQUNBLGFBQU8sSUFBUDtBQUNEOztBQUVELFVBQU0sS0FBS0ssYUFBTCxDQUFtQlgsTUFBbkIsQ0FBTjtBQUNBLFdBQU8sSUFBUDtBQUNELEdBZEQ7O0FBQUEsa0JBQXVDSyxZQUF2QztBQUFBO0FBQUE7QUFBQTs7QUFnQkFmLFFBQVEsQ0FBQ3NCLGFBQVQ7QUFBQSx1REFBeUIsYUFBZ0M7QUFDdkQsUUFBSSxDQUFDLEtBQUtsQixZQUFMLEVBQUwsRUFBMEI7QUFDeEIsWUFBTSxJQUFJQyx5QkFBT0MsbUJBQVgsRUFBTjtBQUNEOztBQUVELFVBQU1DLE9BQU8sU0FBUyxLQUFLSixVQUFMLEVBQXRCO0FBTHVEO0FBQUE7QUFBQTs7QUFBQTtBQU12RCwyQkFBcUJJLE9BQXJCLDhIQUE4QjtBQUFBLGNBQW5CRyxNQUFtQjtBQUM1QixjQUFNLEtBQUtXLGFBQUwsQ0FBbUJYLE1BQW5CLENBQU47QUFDRDtBQVJzRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVN2RCxXQUFPLElBQVA7QUFDRCxHQVZEOztBQUFBLGtCQUF3Q1ksYUFBeEM7QUFBQTtBQUFBO0FBQUE7O0FBWUFyQixPQUFPLENBQUNvQixhQUFSO0FBQUEsdURBQXdCLFdBQThCWCxNQUE5QixFQUFzQztBQUM1RCxVQUFNYSxHQUFHLEdBQUksT0FBTWIsTUFBTSxDQUFDYyxNQUFQLEdBQWdCLEdBQWhCLEdBQXNCLEVBQUcsTUFBS2QsTUFBTSxDQUFDZSxNQUFPLEdBQUVmLE1BQU0sQ0FBQ2dCLElBQUssRUFBN0U7QUFDQSxpQkFBYSxLQUFLbEIsTUFBTCxDQUFZTyxZQUFaLENBQXlCTCxNQUFNLENBQUNRLElBQWhDLEVBQXNDSyxHQUF0QyxDQUFiO0FBQ0QsR0FIRDs7QUFBQSxrQkFBdUNGLGFBQXZDO0FBQUE7QUFBQTtBQUFBOztBQUtBVixNQUFNLENBQUNDLE1BQVAsQ0FBY1YsVUFBZCxFQUEwQkYsUUFBMUIsRUFBb0NDLE9BQXBDO2VBRWVDLFUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nIGZyb20gJy4uL2xvZ2dlcic7XG5pbXBvcnQgeyBlcnJvcnMgfSBmcm9tICdhcHBpdW0tYmFzZS1kcml2ZXInO1xuXG5cbmxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuY29tbWFuZHMuZ2V0Q29va2llcyA9IGFzeW5jIGZ1bmN0aW9uIGdldENvb2tpZXMgKCkge1xuICBpZiAoIXRoaXMuaXNXZWJDb250ZXh0KCkpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLk5vdEltcGxlbWVudGVkRXJyb3IoKTtcbiAgfVxuXG4gIC8vIGdldCB0aGUgY29va2llcyBmcm9tIHRoZSByZW1vdGUgZGVidWdnZXIsIG9yIGFuIGVtcHR5IG9iamVjdFxuICBjb25zdCBjb29raWVzID0gYXdhaXQgdGhpcy5yZW1vdGUuZ2V0Q29va2llcygpIHx8IHtjb29raWVzOiBbXX07XG4gIC8vIHRoZSB2YWx1ZSBpcyBVUkkgZW5jb2RlZCwgc28gZGVjb2RlIGl0XG4gIC8vIGJ1dCBrZWVwIGFsbCB0aGUgcmVzdCBvZiB0aGUgaW5mbyBpbnRhY3RcbiAgcmV0dXJuIGNvb2tpZXMuY29va2llcy5tYXAoZnVuY3Rpb24gKGNvb2tpZSkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb29raWUsIHtcbiAgICAgIHZhbHVlOiBkZWNvZGVVUkkoY29va2llLnZhbHVlKSxcbiAgICB9KTtcbiAgfSk7XG59O1xuXG5jb21tYW5kcy5kZWxldGVDb29raWUgPSBhc3luYyBmdW5jdGlvbiBkZWxldGVDb29raWUgKGNvb2tpZU5hbWUpIHtcbiAgaWYgKCF0aGlzLmlzV2ViQ29udGV4dCgpKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Ob3RJbXBsZW1lbnRlZEVycm9yKCk7XG4gIH1cblxuICBjb25zdCBjb29raWVzID0gYXdhaXQgdGhpcy5nZXRDb29raWVzKCk7XG4gIGNvbnN0IGNvb2tpZSA9IGNvb2tpZXMuZmluZCgoY29va2llKSA9PiBjb29raWUubmFtZSA9PT0gY29va2llTmFtZSk7XG4gIGlmICghY29va2llKSB7XG4gICAgbG9nLmRlYnVnKGBDb29raWUgJyR7Y29va2llTmFtZX0nIG5vdCBmb3VuZC4gSWdub3JpbmcuYCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhd2FpdCB0aGlzLl9kZWxldGVDb29raWUoY29va2llKTtcbiAgcmV0dXJuIHRydWU7XG59O1xuXG5jb21tYW5kcy5kZWxldGVDb29raWVzID0gYXN5bmMgZnVuY3Rpb24gZGVsZXRlQ29va2llcyAoKSB7XG4gIGlmICghdGhpcy5pc1dlYkNvbnRleHQoKSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuTm90SW1wbGVtZW50ZWRFcnJvcigpO1xuICB9XG5cbiAgY29uc3QgY29va2llcyA9IGF3YWl0IHRoaXMuZ2V0Q29va2llcygpO1xuICBmb3IgKGNvbnN0IGNvb2tpZSBvZiBjb29raWVzKSB7XG4gICAgYXdhaXQgdGhpcy5fZGVsZXRlQ29va2llKGNvb2tpZSk7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5oZWxwZXJzLl9kZWxldGVDb29raWUgPSBhc3luYyBmdW5jdGlvbiBfZGVsZXRlQ29va2llIChjb29raWUpIHtcbiAgY29uc3QgdXJsID0gYGh0dHAke2Nvb2tpZS5zZWN1cmUgPyAncycgOiAnJ306Ly8ke2Nvb2tpZS5kb21haW59JHtjb29raWUucGF0aH1gO1xuICByZXR1cm4gYXdhaXQgdGhpcy5yZW1vdGUuZGVsZXRlQ29va2llKGNvb2tpZS5uYW1lLCB1cmwpO1xufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcywgaGVscGVycyk7XG5leHBvcnQgeyBjb21tYW5kcywgaGVscGVycyB9O1xuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJmaWxlIjoibGliL2NvbW1hbmRzL2Nvb2tpZXMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
