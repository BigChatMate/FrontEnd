"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _yargs = _interopRequireDefault(require("yargs"));

var _factory = _interopRequireDefault(require("../lib/factory"));

var _utils = require("../lib/utils");

var _prompt = require("../lib/prompt");

var _appiumSupport = require("appium-support");

_yargs.default.strict().usage('Usage: $0 [options, defaults: --ios --android]').boolean('ios').describe('ios', 'Check iOS setup').boolean('android').describe('android', 'Check Android setup').boolean('dev').describe('dev', 'Check dev setup').boolean('debug').describe('debug', 'Show debug messages').boolean('yes').describe('yes', 'Always respond yes').boolean('no').describe('no', 'Always respond no').boolean('demo').describe('demo', 'Run appium-doctor demo (for dev).').help('h').alias('h', 'help').check(function (argv) {
  if (!argv.ios && !argv.android && !argv.demo) {
    argv.ios = _appiumSupport.system.isMac();
    argv.android = true;
  }

  return true;
});

let opts = Object.assign({
  general: true
}, _yargs.default.argv);
(0, _prompt.configure)(opts);
(0, _utils.configureBinaryLog)(opts);
(0, _factory.default)(opts).run().catch(function (e) {
  console.error(e);
  process.exit(1);
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbi9hcHBpdW0tZG9jdG9yLmpzIl0sIm5hbWVzIjpbInlhcmdzIiwic3RyaWN0IiwidXNhZ2UiLCJib29sZWFuIiwiZGVzY3JpYmUiLCJoZWxwIiwiYWxpYXMiLCJjaGVjayIsImFyZ3YiLCJpb3MiLCJhbmRyb2lkIiwiZGVtbyIsInN5c3RlbSIsImlzTWFjIiwib3B0cyIsIk9iamVjdCIsImFzc2lnbiIsImdlbmVyYWwiLCJydW4iLCJjYXRjaCIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJwcm9jZXNzIiwiZXhpdCJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBQSxlQUNHQyxNQURILEdBRUdDLEtBRkgsQ0FFUyxnREFGVCxFQUdHQyxPQUhILENBR1csS0FIWCxFQUlHQyxRQUpILENBSVksS0FKWixFQUltQixpQkFKbkIsRUFLR0QsT0FMSCxDQUtXLFNBTFgsRUFNR0MsUUFOSCxDQU1ZLFNBTlosRUFNdUIscUJBTnZCLEVBT0dELE9BUEgsQ0FPVyxLQVBYLEVBUUdDLFFBUkgsQ0FRWSxLQVJaLEVBUW1CLGlCQVJuQixFQVNHRCxPQVRILENBU1csT0FUWCxFQVVHQyxRQVZILENBVVksT0FWWixFQVVxQixxQkFWckIsRUFXR0QsT0FYSCxDQVdXLEtBWFgsRUFZR0MsUUFaSCxDQVlZLEtBWlosRUFZbUIsb0JBWm5CLEVBYUdELE9BYkgsQ0FhVyxJQWJYLEVBY0dDLFFBZEgsQ0FjWSxJQWRaLEVBY2tCLG1CQWRsQixFQWVHRCxPQWZILENBZVcsTUFmWCxFQWdCR0MsUUFoQkgsQ0FnQlksTUFoQlosRUFnQm9CLG1DQWhCcEIsRUFpQkdDLElBakJILENBaUJRLEdBakJSLEVBa0JHQyxLQWxCSCxDQWtCUyxHQWxCVCxFQWtCYyxNQWxCZCxFQW1CR0MsS0FuQkgsQ0FtQlMsVUFBVUMsSUFBVixFQUFnQjtBQUNyQixNQUFJLENBQUNBLElBQUksQ0FBQ0MsR0FBTixJQUFhLENBQUNELElBQUksQ0FBQ0UsT0FBbkIsSUFBOEIsQ0FBQ0YsSUFBSSxDQUFDRyxJQUF4QyxFQUE4QztBQUM1Q0gsSUFBQUEsSUFBSSxDQUFDQyxHQUFMLEdBQVdHLHNCQUFPQyxLQUFQLEVBQVg7QUFDQUwsSUFBQUEsSUFBSSxDQUFDRSxPQUFMLEdBQWUsSUFBZjtBQUNEOztBQUNELFNBQU8sSUFBUDtBQUNELENBekJIOztBQTRCQSxJQUFJSSxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQ3ZCQyxFQUFBQSxPQUFPLEVBQUU7QUFEYyxDQUFkLEVBRVJqQixlQUFNUSxJQUZFLENBQVg7QUFJQSx1QkFBZ0JNLElBQWhCO0FBQ0EsK0JBQW1CQSxJQUFuQjtBQUNBLHNCQUFVQSxJQUFWLEVBQWdCSSxHQUFoQixHQUFzQkMsS0FBdEIsQ0FBNEIsVUFBVUMsQ0FBVixFQUFhO0FBQ3ZDQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsQ0FBZDtBQUNBRyxFQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FIRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptYWluXG5cbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7XG5pbXBvcnQgbmV3RG9jdG9yIGZyb20gJy4uL2xpYi9mYWN0b3J5JztcbmltcG9ydCB7IGNvbmZpZ3VyZUJpbmFyeUxvZyB9IGZyb20gJy4uL2xpYi91dGlscyc7XG5pbXBvcnQgeyBjb25maWd1cmUgYXMgY29uZmlndXJlUHJvbXB0IH0gZnJvbSAnLi4vbGliL3Byb21wdCc7XG5pbXBvcnQgeyBzeXN0ZW0gfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cblxueWFyZ3NcbiAgLnN0cmljdCgpXG4gIC51c2FnZSgnVXNhZ2U6ICQwIFtvcHRpb25zLCBkZWZhdWx0czogLS1pb3MgLS1hbmRyb2lkXScpXG4gIC5ib29sZWFuKCdpb3MnKVxuICAuZGVzY3JpYmUoJ2lvcycsICdDaGVjayBpT1Mgc2V0dXAnKVxuICAuYm9vbGVhbignYW5kcm9pZCcpXG4gIC5kZXNjcmliZSgnYW5kcm9pZCcsICdDaGVjayBBbmRyb2lkIHNldHVwJylcbiAgLmJvb2xlYW4oJ2RldicpXG4gIC5kZXNjcmliZSgnZGV2JywgJ0NoZWNrIGRldiBzZXR1cCcpXG4gIC5ib29sZWFuKCdkZWJ1ZycpXG4gIC5kZXNjcmliZSgnZGVidWcnLCAnU2hvdyBkZWJ1ZyBtZXNzYWdlcycpXG4gIC5ib29sZWFuKCd5ZXMnKVxuICAuZGVzY3JpYmUoJ3llcycsICdBbHdheXMgcmVzcG9uZCB5ZXMnKVxuICAuYm9vbGVhbignbm8nKVxuICAuZGVzY3JpYmUoJ25vJywgJ0Fsd2F5cyByZXNwb25kIG5vJylcbiAgLmJvb2xlYW4oJ2RlbW8nKVxuICAuZGVzY3JpYmUoJ2RlbW8nLCAnUnVuIGFwcGl1bS1kb2N0b3IgZGVtbyAoZm9yIGRldikuJylcbiAgLmhlbHAoJ2gnKVxuICAuYWxpYXMoJ2gnLCAnaGVscCcpXG4gIC5jaGVjayhmdW5jdGlvbiAoYXJndikge1xuICAgIGlmICghYXJndi5pb3MgJiYgIWFyZ3YuYW5kcm9pZCAmJiAhYXJndi5kZW1vKSB7XG4gICAgICBhcmd2LmlvcyA9IHN5c3RlbS5pc01hYygpO1xuICAgICAgYXJndi5hbmRyb2lkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0pO1xuXG4vLyBtYWtlIHN1cmUgd2UgdXNlIHRoZSBnZW5lcmFsIGNoZWNrcyBmb3IgZXZlcnkgdGVzdFxubGV0IG9wdHMgPSBPYmplY3QuYXNzaWduKHtcbiAgZ2VuZXJhbDogdHJ1ZSxcbn0sIHlhcmdzLmFyZ3YpO1xuXG5jb25maWd1cmVQcm9tcHQob3B0cyk7XG5jb25maWd1cmVCaW5hcnlMb2cob3B0cyk7XG5uZXdEb2N0b3Iob3B0cykucnVuKCkuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgY29uc29sZS5lcnJvcihlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gIHByb2Nlc3MuZXhpdCgxKTtcbn0pO1xuIl0sImZpbGUiOiJiaW4vYXBwaXVtLWRvY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiJ9
